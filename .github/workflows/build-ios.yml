name: build-ios
# https://github.com/actions/runner-images/issues/13135

on:
#   push:
#     branches: [ main, develop ]
#     paths:
#       - 'SwiftCompatibilityLibTest/**'
#   pull_request:
#     branches: [ main ]
#     paths:
#       - 'SwiftCompatibilityLibTest/**'
  workflow_dispatch:

jobs:
  build:
    name: Build iOS Application
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '26.0.1'

    - name: Try metalToolchain
      run: |
        toolchain_path=$(xcodebuild -showComponent metalToolchain | grep -i "^Toolchain Search Path:" | tail -1 | sed 's/^Toolchain Search Path: *//')
        echo $toolchain_path
        rm -rf $toolchain_path
        
    # - name: Cache CocoaPods
    #   uses: actions/cache@v3
    #   with:
    #     path: |
    #       SwiftCompatibilityLibTest/src/Pods
    #       ~/Library/Caches/CocoaPods
    #       ~/.cocoapods
    #     key: ${{ runner.os }}-pods-${{ hashFiles('SwiftCompatibilityLibTest/src/Podfile.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pods-
          
    - name: Install CocoaPods
      run: |
        gem install cocoapods
        
    - name: Install Pod Dependencies
      run: |
        cd SwiftCompatibilityLibTest/src
        pod install --repo-update

    # https://github.com/actions/runner-images/issues/13135#issuecomment-3374691267
    # - name: Fix Missing Swift Compatibility Libraries
    #   run: |
    #       set -euo pipefail

    #       TOOLCHAIN="$(xcode-select -p)/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/iphoneos"
    #       SDK="$(xcrun --sdk iphoneos --show-sdk-path)/usr/lib/swift"

    #       echo "üîß Restoring missing Swift Compatibility libraries if needed..."
    #       echo "Toolchain path: $TOOLCHAIN"
    #       echo "SDK path:       $SDK"

    #       # List of possible compatibility libraries to restore
    #       LIBS=(
    #         libswiftCompatibility50.a
    #         libswiftCompatibility51.a
    #         libswiftCompatibility56.a
    #         libswiftCompatibilityConcurrency.a
    #         libswiftCompatibilityDynamicReplacements.a
    #         libswiftCompatibilityPacks.a
    #       )

    #       for LIB in "${LIBS[@]}"; do
    #         TOOLCHAIN_LIB="$TOOLCHAIN/$LIB"
    #         SDK_LIB_A="$SDK/$LIB"
    #         SDK_LIB_TBD="${SDK_LIB_A%.a}.tbd"

    #         if [ -f "$TOOLCHAIN_LIB" ]; then
    #           if [ ! -f "$SDK_LIB_A" ] && [ ! -f "$SDK_LIB_TBD" ]; then
    #             echo "‚ö° Creating symlink for $LIB"
    #             ln -s "$TOOLCHAIN_LIB" "$SDK_LIB_A"
    #           else
    #             echo "‚úÖ $LIB already exists in SDK"
    #           fi
    #         else
    #           echo "‚ö†Ô∏è $LIB not found in toolchain"
    #         fi
    #       done

    #       echo ""
    #       echo "üß© Final Swift SDK contents:"
    #       ls -l "$SDK" | grep Compatibility || echo "No Compatibility libs found."

    #       echo ""
    #       echo "Checking for missing Apple frameworks..."
    #       SYSFWK="$(xcrun --sdk iphoneos --show-sdk-path)/System/Library/Frameworks"
    #       for FWK in CoreAudioTypes UIUtilities; do
    #         if [ ! -d "$SYSFWK/$FWK.framework" ]; then
    #           echo "‚ö†Ô∏è Framework $FWK not found in $SYSFWK"
    #         else
    #           echo "‚úÖ Framework $FWK found"
    #         fi
    #       done

    #       echo ""
    #       echo "Swift compatibility library repair complete."

    - name: Build iOS App
      run: |
        cd SwiftCompatibilityLibTest/src
        xcodebuild \
          -workspace SwiftCompatibilityLibTestApp.xcworkspace \
          -scheme SwiftCompatibilityLibTestApp \
          -configuration Release \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=26.0' \
          -derivedDataPath DerivedData \
          clean build \
          CODE_SIGNING_ALLOWED=NO \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_IDENTITY="" \
          PROVISIONING_PROFILE=""
          
    # - name: Archive Build Artifacts
    #   if: success()
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: ios-build-artifacts
    #     path: |
    #       SwiftCompatibilityLibTest/src/DerivedData/Build/Products/Release-iphonesimulator/
    #     retention-days: 7
